@model CoreCodedChatbot.Library.Models.Data.PlaylistItem

<div class="request even">
    <div class="requestHeader">
        <b class="vipText">Current Song (@(Model.isVip ? "Vip" : "Regular"))</b>
    </div>
</div>
<div id="@Model.songRequestId" class="request even">
    <div class="requestData">
        @if (Model == null)
        {
            <b class="vipText">No current song! Request something!</b>
        }
        else
        {
            if (Model.FormattedRequest == null)
            {
                <b class="vipText">Request: </b>
                @Model.songRequestText<br />
                <b class="vipText">Requested By: </b>
                @Model.songRequester
            }
            else
            {
                <b class="vipText">Song: </b>
                @Model.FormattedRequest.SongName<br />
                <b class="vipText">Artist: </b>
                @Model.FormattedRequest.SongArtist<br />
                <b class="vipText">Instrument: </b>
                @Model.FormattedRequest.InstrumentName<br />
                <b class="vipText">Requested By: </b>
                @Model.songRequester
            }
            if (Model.isVip)
            {
                <b class="vipText">Vip Request</b>
            }
        }
    </div>
    <div class="requestBadges">
        <br />
        @{
            if (Model != null)
            {
                if (ViewContext.ViewBag.UserIsMod)
                {
                    <span id="@Model.songRequestId" class="requestBadge removeSongBadge" onclick="showDeleteModal(true)"></span>
                }
                if (!Model.isInChat)
                {
                    <span class="requestBadge leftBadge"></span>
                }
            }
        }
    </div>
</div>